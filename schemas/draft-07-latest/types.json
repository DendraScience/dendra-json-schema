{
  "$id": "types.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "aggregateId": {
      "type": "string",
      "description": "The unique aggregate identifier",
      "example": "rollupDatapoints-0C97-4378-F4DA-A1FD-7353-EFBB-B379-9CBD-4B78-1927-44D2-790D-25BA-A086-BCEC-0D93",
      "maxLength": 120,
      "type": "string"
    },
    "annotationId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e0a0"
    },
    "createdAt": {
      "$ref": "#/definitions/isoDatetimeUTC",
      "description": "Timestamp of when the document was created"
    },
    "createdBy": {
      "$ref": "#/definitions/objectId",
      "description": "Identifier of user that created this document"
    },
    "cssClasses": {
      "description": "One or more CSS class names to apply to the entity",
      "example": [
        "first-class",
        "second-class"
      ],
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "type": "array"
    },
    "cssStyle": {
      "description": "One or more CSS style name/value pairs to apply to the entity",
      "example": {
        "backgroundColor": "white"
      },
      "type": "object"
    },
    "dashboardId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e090"
    },
    "datapointPaginationMeta": {
      "additionalProperties": false,
      "properties": {
        "limit": {
          "$ref": "#/definitions/paginationLimit"
        }
      },
      "type": "object"
    },
    "datapointQueryLimit": {
      "default": 1440,
      "description": "Specify the maximum number of datapoints to return",
      "example": 60,
      "maximum": 10080,
      "type": "integer"
    },
    "datapointQueryParameters": {
      "additionalProperties": false,
      "properties": {
        "$limit": {
          "$ref": "#/definitions/datapointQueryLimit"
        },
        "$sort[time]": {
          "$ref": "#/definitions/querySort",
          "default": -1,
          "description": "Specify the sort order"
        },
        "lat": {
          "description": "Return datapoints for the given latitude",
          "example": 37.3382082,
          "type": "number"
        },
        "lon": {
          "description": "Return datapoints for the given longitude (alias 'lng')",
          "example": -121.8863286,
          "type": "number"
        },
        "time[$op]": {
          "$ref": "types.json#/definitions/isoDatetimeUTC",
          "description": "Filter on time using query operators: $lt, $lte, $gt, $gte",
          "example": "2017-05-11T00:00:00Z"
        },
        "time_local": {
          "default": false,
          "description": "Whether the time parameter is in local time",
          "example": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "datastreamAttributes": {
      "description": "Any custom attributes for the datastream",
      "example": {
        "height": {
          "unit_tag": "dt_Unit_Meter",
          "value": 10
        }
      },
      "type": "object"
    },
    "datastreamId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e020"
    },
    "datastreamLookupParameters": {
      "additionalProperties": false,
      "properties": {
        "_id": {
          "description": "A comma separated list of datastream identifiers",
          "example": [
            "592f155746a1b867a114e020",
            "592f155746a1b867a114e021"
          ],
          "items": {
            "$ref": "types.json#/definitions/datastreamId"
          },
          "type": "array"
        },
        "attributes_exists": {
          "description": "Whether the datastreams have attributes or not",
          "example": false,
          "type": "boolean"
        },
        "source": {
          "description": "A comma separated list of datastream sources (can be combined with attributes_exist and tags)",
          "example": [
            "edu.berkeley.sensor.ucnrs.legacy.odm",
            "gov.noaa.nws.ndfd.rest.xml"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "station_id": {
          "description": "A comma separated list of station identifiers (can be combined with attributes_exist and tags)",
          "example": [
            "592f155746a1b867a114e060",
            "592f155746a1b867a114e061"
          ],
          "items": {
            "$ref": "types.json#/definitions/stationId"
          },
          "type": "array"
        },
        "tags": {
          "description": "A dot separated list of vocabulary tags",
          "example": "ds_Aggregate_Average.ds_Medium_Air.ds_Variable_Temperature",
          "type": "string"
        },
        "tags_exact": {
          "default": false,
          "description": "Perform an EXACT match on the given vocabulary tags",
          "example": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "datastreamSource": {
      "example": "edu.berkeley.sensor.ucnrs.legacy.odm",
      "type": "string"
    },
    "datastreamTags": {
      "$ref": "#/definitions/tags",
      "example": [
        "ds_Aggregate_Average",
        "ds_Medium_Air",
        "ds_Variable_Temperature",
        "dt_Unit_DegreeFahrenheit"
      ]
    },
    "description": {
      "description": "Text describing this document",
      "example": "Data is a precious thing and will last longer than the systems themselves (Tim Berners-Lee).",
      "type": "string"
    },
    "email": {
      "description": "The primary contact email address",
      "example": "collin@berkeley.edu",
      "type": "string"
    },
    "externalLinks": {
      "description": "A list of external site links to display in any user interface",
      "items": {
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "url": {
            "$ref": "#/definitions/url"
          }
        },
        "required": [
          "title",
          "url"
        ],
        "type": "object"
      },
      "minItems": 1,
      "type": "array"
    },
    "externalRefs": {
      "description": "A list of external or foreign keys associated with this document",
      "items": {
        "additionalProperties": false,
        "properties": {
          "identifier": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "$ref": "#/definitions/url"
          }
        },
        "type": "object"
      },
      "minItems": 1,
      "type": "array"
    },
    "geoLinearRing": {
      "description": "An array of four or more GeoJSON positions where the first equals the last",
      "items": {
        "$ref": "#/definitions/geoPosition"
      },
      "minItems": 4,
      "type": "array"
    },
    "geoLinearRingArray": {
      "description": "An array of GeoJSON linear rings",
      "items": {
        "$ref": "#/definitions/geoLinearRing"
      },
      "minItems": 1,
      "type": "array"
    },
    "geoMultiPolygon": {
      "additionalProperties": false,
      "description": "An GeoJSON multi-polygon (i.e. an array of linear ring arrays)",
      "example": [
        [
          [
            [
              -109.060253,
              38.599328
            ],
            [
              -109.059541,
              38.719888
            ],
            [
              -109.057388,
              38.795456
            ],
            [
              -109.054189,
              38.874984
            ]
          ]
        ]
      ],
      "properties": {
        "coordinates": {
          "items": {
            "$ref": "#/definitions/geoLinearRingArray"
          },
          "minItems": 1,
          "type": "array"
        },
        "type": {
          "const": "MultiPolygon",
          "example": "MultiPolygon",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "geoObject": {
      "oneOf": [
        {
          "$ref": "types.json#/definitions/geoPoint"
        },
        {
          "$ref": "types.json#/definitions/geoPolygon"
        },
        {
          "$ref": "types.json#/definitions/geoMultiPolygon"
        }
      ]
    },
    "geoPoint": {
      "additionalProperties": false,
      "description": "A GeoJSON point having one position (i.e. longitude, latitude, altitude)",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/geoPosition"
        },
        "type": {
          "const": "Point",
          "example": "Point",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "geoPolygon": {
      "additionalProperties": false,
      "description": "A GeoJSON polygon (i.e. an array of linear rings)",
      "example": [
        [
          [
            -109.060253,
            38.599328
          ],
          [
            -109.059541,
            38.719888
          ],
          [
            -109.057388,
            38.795456
          ],
          [
            -109.054189,
            38.874984
          ]
        ]
      ],
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/geoLinearRingArray"
        },
        "type": {
          "const": "Polygon",
          "example": "Polygon",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "geoPosition": {
      "description": "A GeoJSON position (i.e. longitude, latitude, altitude)",
      "example": [
        -121.73638,
        37.381666,
        574.548
      ],
      "items": {
        "type": "number"
      },
      "maxItems": 3,
      "minItems": 2,
      "type": "array"
    },
    "hashes": {
      "description": "System generated hashes for uniquing and indexing this document",
      "example": [
        {
          "key": "doc",
          "scheme_id": "ds",
          "str": "A54D88E06612D820BC3BE72877C74F257B561B19"
        }
      ],
      "type": "array"
    },
    "isoCountryCode3": {
      "description": "An ISO 3166-1 alpha-3 country code",
      "example": "USA",
      "type": "string"
    },
    "isoDate": {
      "example": "2017-05-28",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
      "type": "string"
    },
    "isoDatetimeLocal": {
      "example": "2017-05-28T09:50:23.106",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}|.|[0-9]{0,3}$",
      "type": "string"
    },
    "isoDatetimeUTC": {
      "example": "2017-05-28T09:50:23.106Z",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}|.|[0-9]{0,3}Z$",
      "type": "string"
    },
    "isEnabled": {
      "type": "boolean",
      "description": "Whether this document is enabled (functional) in the system",
      "example": true
    },
    "label": {
      "description": "A metadata label assigned to entities and used to construct tags",
      "example": "Variable",
      "maxLength": 50,
      "type": "string"
    },
    "media": {
      "description": "Image and video resources at specific sizes and pixel densities",
      "example": [
        {
          "sizes": {
            "large": {
              "h": 1080,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_1080,w_1080/photo.jpg",
              "w": 1080
            },
            "medium": {
              "h": 480,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_480,w_480/photo.jpg",
              "w": 480
            },
            "medium_2x": {
              "h": 960,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_960,w_960/photo.jpg",
              "w": 960
            },
            "small": {
              "h": 240,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_240,w_240/photo.jpg",
              "w": 240
            },
            "small_2x": {
              "h": 480,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_480,w_480/photo.jpg",
              "w": 480
            },
            "thumb": {
              "h": 60,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_60,w_60/photo.jpg",
              "w": 60
            },
            "thumb_2x": {
              "h": 120,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_120,w_120/photo.jpg",
              "w": 120
            }
          },
          "type": "photo"
        }
      ],
      "items": {
        "additionalProperties": false,
        "properties": {
          "caption": {
            "type": "string"
          },
          "sizes": {
            "properties": {
              "large": {
                "$ref": "#/definitions/mediaSize"
              },
              "medium": {
                "$ref": "#/definitions/mediaSize"
              },
              "medium_2x": {
                "$ref": "#/definitions/mediaSize"
              },
              "small": {
                "$ref": "#/definitions/mediaSize"
              },
              "small_2x": {
                "$ref": "#/definitions/mediaSize"
              },
              "thumb": {
                "$ref": "#/definitions/mediaSize"
              },
              "thumb_2x": {
                "$ref": "#/definitions/mediaSize"
              }
            },
            "required": [
              "large",
              "medium",
              "small",
              "thumb"
            ],
            "type": "object"
          },
          "type": {
            "const": "photo",
            "type": "string"
          }
        },
        "required": [
          "sizes",
          "type"
        ],
        "type": "object"
      },
      "minItems": 1,
      "type": "array"
    },
    "mediaSize": {
      "additionalProperties": false,
      "properties": {
        "h": {
          "type": "integer"
        },
        "url": {
          "$ref": "#/definitions/url"
        },
        "w": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "members": {
      "description": "Access control and role assignments",
      "example": [
        {
          "organization_id": "592f155746a1b867a114e030",
          "roles": [
            "contact"
          ]
        },
        {
          "person_id": "592f155746a1b867a114e040",
          "roles": [
            "admin",
            "contact"
          ]
        }
      ],
      "items": {
        "additionalProperties": false,
        "properties": {
          "organization_id": {
            "$ref": "#/definitions/organizationId"
          },
          "person_id": {
            "$ref": "#/definitions/personId"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "roles"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "membershipId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e080"
    },
    "objectId": {
      "description": "The unique document identifier",
      "example": "592f155746a1b867a114e010",
      "maxLength": 24,
      "pattern": "^[a-fA-F0-9]{24}$",
      "type": "string"
    },
    "organizationId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e030"
    },
    "paginationLimit": {
      "description": "Maximum number of items per page",
      "example": 10,
      "type": "integer"
    },
    "paginationMeta": {
      "additionalProperties": false,
      "properties": {
        "limit": {
          "$ref": "#/definitions/paginationLimit"
        },
        "skip": {
          "$ref": "#/definitions/paginationSkip"
        },
        "total": {
          "$ref": "#/definitions/paginationTotal"
        }
      },
      "type": "object"
    },
    "paginationSkip": {
      "description": "Number of skipped items (offset)",
      "example": 2,
      "type": "integer"
    },
    "paginationTotal": {
      "description": "Total number of records",
      "example": 1,
      "type": "integer"
    },
    "personId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e040"
    },
    "placeId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e050"
    },
    "queryField": {
      "description": "Filter where a field is equal to the supplied value",
      "example": "field_value"
    },
    "queryFieldOp": {
      "description": "Filter using advanced query operators: $in, $nin, $lt, $lte, $gt, $gte, $ne, and $or",
      "example": "field_value"
    },
    "queryLimit": {
      "default": 200,
      "description": "Specify the maximum number of items to return",
      "example": 10,
      "maximum": 2000,
      "type": "integer"
    },
    "queryParameters": {
      "additionalProperties": false,
      "properties": {
        "$limit": {
          "$ref": "#/definitions/queryLimit"
        },
        "$select[field_name]": {
          "$ref": "#/definitions/querySelect"
        },
        "$skip": {
          "$ref": "#/definitions/querySkip"
        },
        "$sort[field_name]": {
          "$ref": "#/definitions/querySort"
        },
        "field_name": {
          "$ref": "#/definitions/queryField"
        },
        "field_name[$op]": {
          "$ref": "#/definitions/queryFieldOp"
        }
      },
      "type": "object"
    },
    "querySelect": {
      "description": "Pick which fields to include in the results",
      "enum": [
        1
      ],
      "example": 1
    },
    "querySkip": {
      "default": 0,
      "description": "Specify the number of items to skip over (offset)",
      "example": 2,
      "type": "integer"
    },
    "querySort": {
      "description": "Specify the fields to sort by and the respective sort order",
      "enum": [
        -1,
        1
      ],
      "example": 1
    },
    "schemeId": {
      "$ref": "types.json#/definitions/stringId",
      "example": "ds"
    },
    "slug": {
      "description": "A human-readable and URL-friendly name used to retrieve this document's page or resource",
      "example": "document-name",
      "pattern": "^[a-z0-9-]+$",
      "type": "string"
    },
    "somId": {
      "$ref": "types.json#/definitions/stringId",
      "example": "imp"
    },
    "stationId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e060"
    },
    "stringId": {
      "description": "The unique document identifier",
      "example": "document-id",
      "maxLength": 50,
      "type": "string"
    },
    "tags": {
      "description": "One or more tags in the format: <schemeId>&#95;<vocabularyLabel>&#95;<termLabel>",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "type": "array"
    },
    "thingId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e070"
    },
    "timeZoneAbbr": {
      "description": "A time zone abbreviation",
      "example": "PST",
      "type": "string"
    },
    "timeZoneInfo": {
      "description": "Any additional time zone attributes, such as offset",
      "type": "object"
    },
    "timeZoneName": {
      "description": "A valid time zone name as found in the IANA time zone database",
      "example": "America/Los_Angeles",
      "type": "string"
    },
    "unset": {
      "const": "",
      "type": "string"
    },
    "uomId": {
      "$ref": "types.json#/definitions/stringId",
      "example": "degree-fahrenheit"
    },
    "updatedAt": {
      "$ref": "#/definitions/isoDatetimeUTC",
      "description": "Last updated timestamp"
    },
    "updatedBy": {
      "$ref": "#/definitions/objectId",
      "description": "Identifier of user that updated this document"
    },
    "url": {
      "format": "uri",
      "type": "string"
    },
    "urls": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "label": {
            "type": "string"
          },
          "url": {
            "$ref": "#/definitions/url"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "userId": {
      "$ref": "types.json#/definitions/objectId",
      "example": "592f155746a1b867a114e040"
    },
    "utcOffset": {
      "description": "An offset in seconds between the time zone and UTC",
      "example": -28800,
      "type": "integer"
    },
    "versionId": {
      "$ref": "types.json#/definitions/objectId",
      "description": "The automatically assigned version identifier",
      "example": "592f155746a1b867a114e0b0"
    },
    "vocabularyId": {
      "$ref": "types.json#/definitions/stringId",
      "example": "ds-aggregate"
    }
  },
  "hidden": true
}